{"version":3,"sources":["components/Output/Output.js","components/common/Common.js","components/pages/HomePage.js","components/pages/Signup.js","components/pages/MainPage.js","components/App.js","serviceWorker.js","index.js"],"names":["output","props","onClick","click","style","margin","marginTop","width","border","padding","name","age","WorldAnimation","history","useHistory","Icon","push","title","color","loading","size","Home","Container","textAlign","Header","as","Segment","placeholder","Grid","columns","relaxed","stackable","Column","Form","Input","icon","iconPosition","label","type","Button","content","verticalAlign","Divider","vertical","Signup","to","Field","Checkbox","Main","exact","path","component","App","useState","thought","id","data","setData","deleteDataHandler","dataIndex","myData","splice","map","val","index","key","Output","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.365d5260.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst output = (props) => {\r\n  const divStyle = {\r\n    margin: \"auto\",\r\n    marginTop: \"20px\",\r\n    width: \"50%\",\r\n    border: \"3px solid green\",\r\n    padding: \"10px\",\r\n  };\r\n  return (\r\n    <div onClick={props.click} style={divStyle}>\r\n      <p>\r\n        Hi! my name is {props.name} and I'm {props.age} years old.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default output;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const WorldAnimation = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Icon\r\n      onClick={() => history.push(\"/sse-test-app/home\")}\r\n      title=\"Back to home page.\"\r\n      color=\"teal\"\r\n      loading\r\n      size=\"big\"\r\n      name=\"circle world\"\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { WorldAnimation } from \"../common/Common\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <Container textAlign=\"center\" style={{ width: \"50%\" }}>\r\n        <WorldAnimation />\r\n        <Header as=\"h1\" style={{ margin: \"0\" }}>\r\n          React Test Application\r\n        </Header>\r\n        <Header as=\"h3\" color=\"teal\" style={{ margin: \"0\" }}>\r\n          CYPRESS\r\n        </Header>\r\n        <p>The modern tool for writing UI and API tests.</p>\r\n        <Segment placeholder>\r\n          <Grid columns={2} relaxed=\"very\" stackable>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Input\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  label=\"Username\"\r\n                  placeholder=\"Username\"\r\n                />\r\n                <Form.Input\r\n                  icon=\"lock\"\r\n                  iconPosition=\"left\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n\r\n                <Button\r\n                  content=\"Login\"\r\n                  color=\"teal\"\r\n                  title=\"Click to proceed.\"\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column verticalAlign=\"middle\">\r\n              <Button\r\n                name=\"register\"\r\n                content=\"Register\"\r\n                icon=\"signup\"\r\n                size=\"big\"\r\n                color=\"teal\"\r\n                title=\"Register to learn cypress.\"\r\n                onClick={() => history.push(\"/sse-test-app/signup\")}\r\n              />\r\n            </Grid.Column>\r\n          </Grid>\r\n\r\n          <Divider vertical>Or</Divider>\r\n        </Segment>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Checkbox,\r\n  Segment,\r\n  Container,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { WorldAnimation } from \"../common/Common\";\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <Container textAlign=\"center\" style={{ width: \"50%\" }}>\r\n      <WorldAnimation />\r\n      <Header style={{ margin: \"0\" }} as=\"h2\">\r\n        Create a New Account\r\n      </Header>\r\n      <p>\r\n        Already have one? <Link to=\"/sse-test-app/home\">Sign in here</Link>\r\n      </p>\r\n      <Segment>\r\n        <Form>\r\n          <Form.Field>\r\n            <label>First Name</label>\r\n            <input placeholder=\"First Name\" />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Last Name</label>\r\n            <input placeholder=\"Last Name\" />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Email Address</label>\r\n            <input placeholder=\"test@test.test\" />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"Password\" />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Checkbox label=\"I agree to the Terms and Conditions\" />\r\n          </Form.Field>\r\n          <Button color=\"teal\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n};\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, HashRouter } from \"react-router-dom\";\r\nimport Home from \"./HomePage\";\r\nimport Signup from \"./Signup\";\r\nconst Main = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Route exact path=\"/sse-test-app/\" component={Home}></Route>\r\n        <Route exact path=\"/sse-test-app/home\" component={Home}></Route>\r\n        <Route exact path=\"/sse-test-app/signup\" component={Signup}></Route>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default Main;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Output from \"../components/Output/Output\";\nimport Main from \"./pages/MainPage\";\nimport { Input } from \"semantic-ui-react\";\n\nfunction App() {\n  const [val, setVal] = useState({ thought: \"\" });\n  const [data, setData] = useState([\n    {\n      id: null,\n      name: \"Timmy\",\n      age: 40,\n    },\n    {\n      id: null,\n      name: \"Melody\",\n      age: 41,\n    },\n    {\n      id: null,\n      name: \"Sebastian\",\n      age: 16,\n    },\n  ]);\n\n  const thoughtChangedHandler = (event) => {\n    setVal({ thought: event.target.value });\n  };\n\n  const deleteDataHandler = (dataIndex) => {\n    const myData = [...data];\n    myData.splice(dataIndex, 1);\n    setData(myData);\n  };\n\n  const dataValues = data.map((val, index) => {\n    return (\n      <div key={index}>\n        <Output click={deleteDataHandler} name={val.name} age={val.age} />\n      </div>\n    );\n  });\n\n  return (\n    // <div className=\"App\">\n    //   <h1>SSE Practice Application</h1>\n    //   <Input change={thoughtChangedHandler} />\n    //   <p style={{ color: \"red\" }}>{val.thought}</p>\n    //   {dataValues}\n    // </div>\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}